# Data Analysis of Anime Data
### Load libraries
```{r}
library(dplyr)
library(tidyr)
library(stringr)
```

### Pattern Discovering
Try some basic function to see if any pattern exists
```{r}
da_set <- anime_data2
summary(da_set)
cor(da_set[sapply(da_set, is.numeric)])
```
Do one hot on type, to see any relation between score, type, and rating

#### Overall score and Outlier 
```{r}
anime_score <- anime_data0[!is.na(anime_data0$score),]$score
boxplot(anime_score,
        horizontal = TRUE,
        main = "Anime Scores",
        ylab = "Score",
        col = "lightblue",
        border = "darkblue")
boxplot(anime_score,
        horizontal = TRUE,
        outline = FALSE,
        main = "Anime Scores without Outliers",
        ylab = "Score",
        col = "lightblue",
        border = "darkblue")
```

##### Count outliers
```{r}
Q1 <- quantile(anime_score, 0.25, na.rm = TRUE)
Q3 <- quantile(anime_score, 0.75, na.rm = TRUE)
IQR_val <- Q3 - Q1

# Define lower and upper bounds
lower_bound <- Q1 - 1.5 * IQR_val
upper_bound <- Q3 + 1.5 * IQR_val

# Count outliers
num_outliers <- sum(anime_score < lower_bound | anime_score > upper_bound, na.rm = TRUE)

num_outliers

```


#### Top 10 genres
Use the dataset  "anime_data2" to find top 10 genre
criteria of top 10 genre: average score 
```{r}
```


```{r}
genre_counts <- anime_data |>
  select(genres) |>
  mutate(genres = str_split(genres, ",\\s*")) |>  # split genres on comma
  unnest(genres) |>
  group_by(genres) |>
  summarise(count = n()) |>
  arrange(desc(count))
genre_counts
```
find top genre using avg score
Based on the result, anime who has win the award has the higest avg score
```{r}
top_genres <- anime_data |>
  select(score, genres) |>
  filter(!is.na(score), !is.na(genres)) |>
  mutate(genres = str_split(genres, ",\\s*")) |>
  unnest(genres) |>
  group_by(genres) |>
  summarise(
    avg_score = mean(score, na.rm = TRUE),
    sd_score = sd(score, na.rm = TRUE),
    count = n()
  ) |>
  arrange(desc(avg_score)) |>
  slice_head(n = 10)
top_genres
```
##### Result: top 10 genres are "Award, Winning", "Suspense", "Mystery", "Drama", "Romance", "Supernatural", "Action", "Adventure", "Sports", "Girls Love"
```{r}
top10_genre <- c("Award, Winning", "Suspense", "Mystery", "Drama", "Romance", 
                 "Supernatural", "Action", "Adventure", "Sports", "Girls Love")
```
#### Top studio and producers

count the studios
```{r}
studio_counts <- p_data |>
  select(studios, score) |>
  unnest(studios) |>
  filter(!is.na(score)) |>
  group_by(studios) |>
  summarise(
    count = n(),
    avg_score = mean(score, na.rm = TRUE),
    sd_score = sd(score, na.rm = TRUE)
  ) |>
  arrange(desc(count))
studio_counts
```

```{r}
top_studio <- p_data |>
  select(score, studios) |>
  filter(!is.na(score), !is.na(studios)) |>
  unnest(studios) |>
  group_by(studios) |>
  summarise(
    avg_score = mean(score, na.rm = TRUE),
    sd_score = sd(score, na.rm = TRUE),
    count = n()
  ) |>
  arrange(desc(avg_score)) |>
  slice_head(n = 10)
top_studio
```
It is hard to see which studio are really popular because give the count of of 1,2, or 3 doesn't give us too much information on their performance in a long run - data is insufficient. 
We may find the top10 studio online using domain knowledge and test if they have any impact on the score:
```{r}

```


### Type and Rating Analysis
```{r}

```


